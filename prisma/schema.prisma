// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  users       User[]
  invitations Invitation[]
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String?
  name       String
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  role       Role     @default(USER)
  accounts   Account[]
  sessions   Session[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   
  access_token       String?   
  expires_at         Int?      
  token_type         String?   
  scope              String?   
  id_token           String?   
  session_state      String?   
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires   DateTime

  @@unique([identifier, token])
}

model Invitation {
  id         Int      @id @default(autoincrement())
  email      String
  token      String   @unique
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  role       Role     @default(USER)
  status     InvitationStatus @default(PENDING)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  EXPIRED
}
